name: Cypress Tests and Slack Notification

on:
  push:
    branches:
      - main

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests with Mochawesome
        # Usando la acciÃ³n de Cypress para una mejor integraciÃ³n y manejo de cachÃ©
        uses: cypress-io/github-action@v6
        with:
          install-command: 'npm ci'
          command: 'npx cypress run --reporter mochawesome --reporter-options reportDir=cypress/results,overwrite=false,html=false,json=true'
        continue-on-error: true # Mantenemos esto para que los pasos de notificaciÃ³n siempre se ejecuten

      - name: Extract test summary
        if: always()
        run: |
          RESULTS_FILE="cypress/results/mochawesome.json"
          if [ -f "$RESULTS_FILE" ]; then
            echo "PASSED_TESTS=$(jq '.stats.passes' $RESULTS_FILE)" >> $GITHUB_ENV
            echo "FAILED_TESTS=$(jq '.stats.failures' $RESULTS_FILE)" >> $GITHUB_ENV
            echo "SKIPPED_TESTS=$(jq '.stats.skipped' $RESULTS_FILE)" >> $GITHUB_ENV
            echo "TOTAL_TESTS=$(jq '.stats.tests' $RESULTS_ENV)" >> $GITHUB_ENV
          else
            echo "No mochawesome.json found. Setting default values."
            echo "PASSED_TESTS=0" >> $GITHUB_ENV
            echo "FAILED_TESTS=0" >> $GITHUB_ENV
            echo "SKIPPED_TESTS=0" >> $GITHUB_ENV
            echo "TOTAL_TESTS=0" >> $GITHUB_ENV
          fi

      - name: Prepare Slack Attachment Payload
        if: always()
        id: prepare_slack_payload # AÃ±adimos un ID para usar sus outputs
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          
          ATTACHMENT_COLOR=""
          STATUS_TEXT=""
          if [ "${{ env.FAILED_TESTS }}" -gt 0 ]; then
            ATTACHMENT_COLOR="#FF0000" # Rojo para fallas
            STATUS_TEXT="ðŸ”´ *FALLA EN LAS PRUEBAS* ðŸ”´"
          else
            ATTACHMENT_COLOR="#008000" # Verde para Ã©xito
            STATUS_TEXT="âœ… *PRUEBAS EXITOSAS* âœ…"
          fi

          # Construimos el JSON del payload con un 'attachment'
          PAYLOAD_JSON=$(cat <<EOF
          {
            "attachments": [
              {
                "color": "$ATTACHMENT_COLOR",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "$STATUS_TEXT\n*Resultados de Pruebas Cypress* para el commit \`<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${SHORT_SHA}>\` en la rama \`${{ github.ref_name }}\`"
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Total:*\n${{ env.TOTAL_TESTS }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Passed:*\n${{ env.PASSED_TESTS }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Failed:*\n${{ env.FAILED_TESTS }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Skipped:*\n${{ env.SKIPPED_TESTS }}"
                      }
                    ]
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Ver Workflow en GitHub"
                        },
                        "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                        "style": "primary"
                      }
                    ]
                  }
                ]
              }
            ]
          }
            EOF
          )  
        # Pasamos el JSON como output para el siguiente paso
        echo "slack_payload_json=$PAYLOAD_JSON" >> $GITHUB_OUTPUT


      - name: Send Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # Usamos el output del paso anterior para el payload
          payload: ${{ steps.prepare_slack_payload.outputs.slack_payload_json }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Upload Cypress artifacts
        if: always() # Sube los artefactos siempre, o puedes cambiar a if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results
          path: |
            cypress/videos/
            cypress/screenshots/
            cypress/results/mochawesome.json
          retention-days: 5 # O el nÃºmero de dÃ­as que quieras retener los artefactos