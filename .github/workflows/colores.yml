name: Cypress Tests and Slack Notification

on:
  push:
    branches:
      - main

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests with Mochawesome
        # Usando la acci√≥n de Cypress para una mejor integraci√≥n y manejo de cach√©
        uses: cypress-io/github-action@v6
        with:
          install-command: 'npm ci'
          command: 'npx cypress run --reporter mochawesome --reporter-options reportDir=cypress/results,overwrite=false,html=false,json=true'
        continue-on-error: true # Mantener para asegurar que los pasos de notificaci√≥n siempre se ejecuten

      - name: Extract test summary
        if: always()
        run: |
          RESULTS_FILE="cypress/results/mochawesome.json"
          if [ -f "$RESULTS_FILE" ]; then
            echo "PASSED_TESTS=$(jq '.stats.passes' $RESULTS_FILE)" >> $GITHUB_ENV
            echo "FAILED_TESTS=$(jq '.stats.failures' $RESULTS_FILE)" >> $GITHUB_ENV
            echo "SKIPPED_TESTS=$(jq '.stats.skipped' $RESULTS_FILE)" >> $GITHUB_ENV
            echo "TOTAL_TESTS=$(jq '.stats.tests' $RESULTS_FILE)" >> $GITHUB_ENV
          else
            echo "No mochawesome.json found. Setting default values."
            echo "PASSED_TESTS=0" >> $GITHUB_ENV
            echo "FAILED_TESTS=0" >> $GITHUB_ENV
            echo "SKIPPED_TESTS=0" >> $GITHUB_ENV
            echo "TOTAL_TESTS=0" >> $GITHUB_ENV
          fi

      - name: Compose Slack message
        if: always()
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          
          # Determinar el emoji y estado basado en si hay fallas
          if [ "${{ env.FAILED_TESTS }}" -gt 0 ]; then
            STATUS_EMOJI=":red_circle:"
            TEST_STATUS="FALLIDAS"
          else
            STATUS_EMOJI=":green_circle:"
            TEST_STATUS="EXITOSAS"
          fi

          echo "SLACK_MESSAGE=$STATUS_EMOJI *Resultados de Pruebas Cypress ($TEST_STATUS)* para el commit \`${SHORT_SHA}\` en la rama \`${{ github.ref_name }}\`\nüìä Total: ${{ env.TOTAL_TESTS }}\n‚úÖ Passed: ${{ env.PASSED_TESTS }}\n‚ùå Failed: ${{ env.FAILED_TESTS }}\n‚ö™Ô∏è Skipped: ${{ env.SKIPPED_TESTS }}\nüîó Ver workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Send Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "${{ env.SLACK_MESSAGE }}"
            }
        env:
          SLACK_WEBHOOK_URL_COLOR: ${{ secrets.SLACK_WEBHOOK_URL_COLOR }}

      - name: Upload Cypress artifacts
        if: always() # Sube los artefactos siempre, o puedes cambiar a if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results
          path: |
            cypress/videos/
            cypress/screenshots/
            cypress/results/mochawesome.json
          retention-days: 5 # O el n√∫mero de d√≠as que quieras retener los artefactos