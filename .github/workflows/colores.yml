name: Cypress Tests and Slack Notification

on:
  push:
    branches:
      - main

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests with Mochawesome
        run: |
          npx cypress run --reporter mochawesome \
                          --reporter-options reportDir=cypress/results,overwrite=false,html=true,json=true
        continue-on-error: true

      - name: Upload Mochawesome HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mochawesome-report
          path: cypress/results/mochawesome.html

      - name: Extract test summary
        id: test-summary
        if: always()
        run: |
          RESULTS_FILE="cypress/results/mochawesome.json"
          echo "passed=$(jq '.stats.passes' $RESULTS_FILE)" >> $GITHUB_OUTPUT
          echo "failed=$(jq '.stats.failures' $RESULTS_FILE)" >> $GITHUB_OUTPUT
          echo "skipped=$(jq '.stats.skipped' $RESULTS_FILE)" >> $GITHUB_OUTPUT
          echo "total=$(jq '.stats.tests' $RESULTS_FILE)" >> $GITHUB_OUTPUT

      - name: Compose Slack message
        id: slack-msg
        if: always()
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          COLOR="#36a64f"
          if [ "${{ steps.test-summary.outputs.failed }}" -gt 0 ]; then
            COLOR="#ff4d4f"
          fi

          MESSAGE="*Resultados de Pruebas Cypress* para el commit ${SHORT_SHA} en la rama \`${{ github.ref_name }}\`\n📊 Total: ${{ steps.test-summary.outputs.total }}\n✅ Passed: ${{ steps.test-summary.outputs.passed }}\n❌ Failed: ${{ steps.test-summary.outputs.failed }}\n⚪️ Skipped: ${{ steps.test-summary.outputs.skipped }}\n📎 Reporte: (descargar desde _Artifacts_)\n🔗 Ver workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          MESSAGE_ESCAPED=$(echo "$MESSAGE" | sed ':a;N;$!ba;s/\n/\\n/g')

          echo "payload=$(jq -n \
            --arg color "$COLOR" \
            --arg msg "$MESSAGE_ESCAPED" \
            '{
              text: "",
              attachments: [
                {
                  fallback: "Resultados de Pruebas Cypress",
                  color: $color,
                  text: $msg
                }
              ]
            }')" >> $GITHUB_OUTPUT

      - name: Send Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: ${{ steps.slack-msg.outputs.payload }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}