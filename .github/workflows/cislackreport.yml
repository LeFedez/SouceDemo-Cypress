name: Cypress Tests and Slack Notification

on:
  push:
    branches:
      - main

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests with Mochawesome
        run: |
          npx cypress run --reporter mochawesome \
                          --reporter-options reportDir=cypress/results,overwrite=false,html=false,json=true
        continue-on-error: true

      - name: Extract test summary
        if: always()
        run: |
          RESULTS_FILE="cypress/results/mochawesome.json"
          echo "PASSED_TESTS=$(jq '.stats.passes' $RESULTS_FILE)" >> $GITHUB_ENV
          echo "FAILED_TESTS=$(jq '.stats.failures' $RESULTS_FILE)" >> $GITHUB_ENV
          echo "SKIPPED_TESTS=$(jq '.stats.skipped' $RESULTS_FILE)" >> $GITHUB_ENV

      - name: Compose Slack message
        if: always()
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          SLACK_MESSAGE=$(jq -n \
            --arg sha "${{ github.sha }}" \
            --arg shortsha "$SHORT_SHA" \
            --arg repo "${{ github.repository }}" \
            --arg url "${{ github.server_url }}" \
            --arg ref "${{ github.ref_name }}" \
            --arg passed "${PASSED_TESTS}" \
            --arg failed "${FAILED_TESTS}" \
            --arg skipped "${SKIPPED_TESTS}" \
            --arg runurl "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            '
            {
              text: "Resumen de resultados de pruebas Cypress",
              blocks: [
                {
                  type: "section",
                  text: {
                    type: "mrkdwn",
                    text: "*Resultados de Pruebas Cypress* para el commit <\($url)/\($repo)/commit/\($sha)|\($shortsha)> en la rama `\($ref)`"
                  }
                },
                { type: "divider" },
                {
                  type: "section",
                  fields: [
                    { type: "mrkdwn", text: "✅ *Pasaron:*\n\($passed)" },
                    { type: "mrkdwn", text: "❌ *Fallaron:*\n\($failed)" },
                    { type: "mrkdwn", text: "⚪️ *Saltados:*\n\($skipped)" }
                  ]
                },
                {
                  type: "actions",
                  elements: [
                    {
                      type: "button",
                      text: { type: "plain_text", text: "Ver resultados del Workflow" },
                      url: $runurl
                    }
                  ]
                }
              ]
            }')
          echo "SLACK_MESSAGE<<EOF" >> $GITHUB_ENV
          echo "$SLACK_MESSAGE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: ${{ env.SLACK_MESSAGE }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}